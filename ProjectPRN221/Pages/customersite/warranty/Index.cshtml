@page
@model ProjectPRN221.Pages.customersite.warranty.IndexModel
@{
    ViewData["Title"] = "Warranty";
    Layout = "CustomerLayout";
}

        <style>
            .orderstatus {
                margin-bottom:  20px;
                display: flex;
                justify-content: space-evenly;
                margin-top:   20px;
            }
        </style>


    @*HEADER*@
<partial name="/Pages/_HeaderCustomersite.cshtml" model="new ProjectPRN221.Pages._HeaderCustomerSiteModel()" />
            <div class="col-lg-12 col-md-12">
            <div>
                <div style="text-align: center">
                    <h1 class="">Warranty</h1>
                </div>
                <div style="text-align: center">
                    <a href="/customersite/warranty/Order" class="btn btn-primary text-white me-0">Create Warranty</a>
                </div>
                <div class="orderstatus">
                    <p><a href="/customersite/warranty/Index?service=displayWarrantyStatus&status=Wait">Wait: @Model.Wait </a></p>
                    <p><a href="/customersite/warranty/Index?service=displayWarrantyStatus&status=Process">Process: @Model.Process  </a></p>
                    <p><a href="/customersite/warranty/Index?service=displayWarrantyStatus&status=Done">Done: @Model.Done  </a></p>
                </div>
            </div>
            <div>
                <table style="width: 100%" id="myTable">
                    <thead>
                        <tr>
                            <th>Product Name</th>
                            <th>Image</th>
                            <th>Warranty Quantity</th>
                            <th>Image Product</th>
                            <th>Product Status</th>
                            <th>Warranty Status</th>
                            <th>Warranty Date</th>
                            <th>Status</th>
                            <th>DOWNLOAD</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in Model.warranties){
                            <tr>
                                <td>@item.Product.ProductName</td>
                                <td><img style="width: 60%" src="@item.Product.Image" alt="alt"/></td>
                                <td>@item.WarrantyQuantity</td>
                                <td><img style="width: 60%" src="@item.ImageProduct" alt="@item.ImageProduct"/></td>
                                <td>@item.ProductStatus</td> 
                                <td>@item.WarrantyStatus</td>
                                <td>@item.WarrantyDate</td> 
                                <td>@item.Status</td> 
                                <td>
                                    <input type="hidden"  class="name" value="@Model.Customer.Name">
                                    <input type="hidden"  class="phone" value="@Model.Customer.Phone">

                                    <input type="hidden" class="product_id" value="@item.ProductId">
                                    <input type="hidden"  class="product_name" value="@item.Product.ProductName">

                                    <input type="hidden" class="status_product" value="@item.ProductStatus">
                                    <input type="hidden" class="warranty_date" value="@item.WarrantyDate">
                                    <input type="hidden" class="warranty_status" value="@item.WarrantyStatus">

                                    <a onclick="updateDocumentAndDownload(this)" class="btn btn-primary text-white me-0">Download</a>
                                </td> 
                            </tr>
                    }
                    </tbody>
                </table>
            </div>
           </div>


     @*FOOTER*@
     @*<partial name="/Pages/_FooterCustomerSite.cshtml" model="new PROJECT_PRN221.Pages._FooterCustomerSiteModel()"/>*@

        <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
        <script>
                                        function updateDocumentAndDownload(element) {
                                            var currentDate = new Date();
                                            var day = currentDate.getDate();
                                            var month = currentDate.getMonth() + 1;
                                            var year = currentDate.getFullYear();
                                            var dateString = day + '/' + month + '/' + year;
                                            var date = dateString;
                                            var row = element.parentNode.parentNode;
                                            var name = row.getElementsByClassName("name")[0].value;
                                            var phone = row.getElementsByClassName("phone")[0].value;
                                            var product_id = row.getElementsByClassName("product_id")[0].value;
                                            var product_name = row.getElementsByClassName("product_name")[0].value;
                                            var status_product = row.getElementsByClassName("status_product")[0].value;
                                            var warranty_date = row.getElementsByClassName("warranty_date")[0].value;
                                            var status_warranty = row.getElementsByClassName("warranty_status")[0].value;

                                            var url = "https://script.google.com/macros/s/AKfycbxsj42Fpb0guQYIovzC9o69ohTsiiJMYBShBYWP4lw--M9drmy_cYHrbWSNPxECIFMNKQ/exec";

                                            var xhr = new XMLHttpRequest();
                                            xhr.open("POST", url);
                                            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                                            xhr.responseType = "text";
                                            xhr.onreadystatechange = function () {
                                                if (xhr.readyState === XMLHttpRequest.DONE) {
                                                    if (xhr.status === 200) {
                                                        var responseText = xhr.responseText;
                                                        var responseJson = JSON.parse(responseText);
                                                        var downloadUrl = responseJson.url;
                                                        var downloadUrlDocx = downloadUrl.replace("/edit?usp=drivesdk", "/export?format=doc");
                                                        var link = document.createElement("a");
                                                        link.href = downloadUrlDocx;
                                                        link.download = "Warranty.txt";
                                                        document.body.appendChild(link);
                                                        link.click();
                                                        document.body.removeChild(link);
                                                        URL.revokeObjectURL(downloadUrl);
                                                    } else {
                                                        console.error("Error:", xhr.status);
                                                    }
                                                }
                                            };
                                            var params = "name=" + encodeURIComponent(name) + "&phone=" + encodeURIComponent(phone) +
                                                    "&date=" + encodeURIComponent(date) + "&product_id=" + encodeURIComponent(product_id) +
                                                    "&product_name=" + encodeURIComponent(product_name) + "&status_product=" + encodeURIComponent(status_product) +
                                                    "&warranty_date=" + encodeURIComponent(warranty_date) + "&status_warranty=" + encodeURIComponent(status_warranty);
                                            xhr.send(params);
                                        }
        </script>



        <script>
            function exportToExcel() {
                const table = document.getElementById("myTable");
                const wb = XLSX.utils.table_to_book(table, {sheet: "SheetJS"});
                const wbout = XLSX.write(wb, {bookType: "xlsx", type: "array"});
                saveAsExcelFile(wbout, "warranty.xlsx");
            }


            function saveAsExcelFile(buffer, fileName) {
                const data = new Blob([buffer], {type: "application/octet-stream"});
                const link = document.createElement("a");
                link.href = window.URL.createObjectURL(data);
                link.download = fileName;
                link.click();
            }
        </script>
